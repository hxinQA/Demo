// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace WPFtest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// firstClickThrough - Use 'firstClickThroughParams' to pass parameters into this method.
        /// </summary>
        public void firstClickThrough()
        {
            #region Variable Declarations
            WpfComboBox uICmbCountriesComboBox = this.UITipCalculatorWindow.UICmbCountriesComboBox;
            WpfEdit uITxtBillAmountEdit = this.UITipCalculatorWindow.UITxtBillAmountEdit;
            WpfRadioButton uIBadRadioButton = this.UITipCalculatorWindow.UIBadRadioButton;
            WpfRadioButton uIItem2RadioButton = this.UITipCalculatorWindow.UIItem2RadioButton;
            WpfButton uICalculateTipButton = this.UITipCalculatorWindow.UICalculateTipButton;
            WpfButton uIExitButton = this.UITipCalculatorWindow.UIExitButton;
            #endregion

            // Select 'Netherlands' in 'cmbCountries' combo box
            uICmbCountriesComboBox.SelectedItem = this.firstClickThroughParams.UICmbCountriesComboBoxSelectedItem;

            // Type '100' in 'txtBillAmount' text box
            uITxtBillAmountEdit.Text = this.firstClickThroughParams.UITxtBillAmountEditText;

            // Select 'Bad' radio button
            uIBadRadioButton.Selected = this.firstClickThroughParams.UIBadRadioButtonSelected;

            // Select '2' radio button
            uIItem2RadioButton.Selected = this.firstClickThroughParams.UIItem2RadioButtonSelected;

            // Click 'Calculate Tip' button
            Mouse.Click(uICalculateTipButton, new Point(60, 16));

            // Click 'Exit' button
            Mouse.Click(uIExitButton, new Point(54, 23));
        }
        
        #region Properties
        public virtual firstClickThroughParams firstClickThroughParams
        {
            get
            {
                if ((this.mfirstClickThroughParams == null))
                {
                    this.mfirstClickThroughParams = new firstClickThroughParams();
                }
                return this.mfirstClickThroughParams;
            }
        }
        
        public UITipCalculatorWindow UITipCalculatorWindow
        {
            get
            {
                if ((this.mUITipCalculatorWindow == null))
                {
                    this.mUITipCalculatorWindow = new UITipCalculatorWindow();
                }
                return this.mUITipCalculatorWindow;
            }
        }
        #endregion
        
        #region Fields
        private firstClickThroughParams mfirstClickThroughParams;
        
        private UITipCalculatorWindow mUITipCalculatorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'firstClickThrough'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class firstClickThroughParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Netherlands' in 'cmbCountries' combo box
        /// </summary>
        public string UICmbCountriesComboBoxSelectedItem = "Netherlands";
        
        /// <summary>
        /// Type '100' in 'txtBillAmount' text box
        /// </summary>
        public string UITxtBillAmountEditText = "100";
        
        /// <summary>
        /// Select 'Bad' radio button
        /// </summary>
        public bool UIBadRadioButtonSelected = true;
        
        /// <summary>
        /// Select '2' radio button
        /// </summary>
        public bool UIItem2RadioButtonSelected = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITipCalculatorWindow : WpfWindow
    {
        
        public UITipCalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Tip Calculator";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Tip Calculator");
            #endregion
        }
        
        #region Properties
        public WpfComboBox UICmbCountriesComboBox
        {
            get
            {
                if ((this.mUICmbCountriesComboBox == null))
                {
                    this.mUICmbCountriesComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICmbCountriesComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cmbCountries";
                    this.mUICmbCountriesComboBox.WindowTitles.Add("Tip Calculator");
                    #endregion
                }
                return this.mUICmbCountriesComboBox;
            }
        }
        
        public WpfEdit UITxtBillAmountEdit
        {
            get
            {
                if ((this.mUITxtBillAmountEdit == null))
                {
                    this.mUITxtBillAmountEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtBillAmountEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txtBillAmount";
                    this.mUITxtBillAmountEdit.WindowTitles.Add("Tip Calculator");
                    #endregion
                }
                return this.mUITxtBillAmountEdit;
            }
        }
        
        public WpfRadioButton UIBadRadioButton
        {
            get
            {
                if ((this.mUIBadRadioButton == null))
                {
                    this.mUIBadRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUIBadRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "rdbBad";
                    this.mUIBadRadioButton.WindowTitles.Add("Tip Calculator");
                    #endregion
                }
                return this.mUIBadRadioButton;
            }
        }
        
        public WpfRadioButton UIItem2RadioButton
        {
            get
            {
                if ((this.mUIItem2RadioButton == null))
                {
                    this.mUIItem2RadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUIItem2RadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "rdb2NumCourses";
                    this.mUIItem2RadioButton.WindowTitles.Add("Tip Calculator");
                    #endregion
                }
                return this.mUIItem2RadioButton;
            }
        }
        
        public WpfButton UICalculateTipButton
        {
            get
            {
                if ((this.mUICalculateTipButton == null))
                {
                    this.mUICalculateTipButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICalculateTipButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnCalcTip";
                    this.mUICalculateTipButton.WindowTitles.Add("Tip Calculator");
                    #endregion
                }
                return this.mUICalculateTipButton;
            }
        }
        
        public WpfButton UIExitButton
        {
            get
            {
                if ((this.mUIExitButton == null))
                {
                    this.mUIExitButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIExitButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnExit";
                    this.mUIExitButton.WindowTitles.Add("Tip Calculator");
                    #endregion
                }
                return this.mUIExitButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mUICmbCountriesComboBox;
        
        private WpfEdit mUITxtBillAmountEdit;
        
        private WpfRadioButton mUIBadRadioButton;
        
        private WpfRadioButton mUIItem2RadioButton;
        
        private WpfButton mUICalculateTipButton;
        
        private WpfButton mUIExitButton;
        #endregion
    }
}
